name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    env:
      CI: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # ---------- Backend ----------
      - name: Set up JDK 24
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "24"

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('backend/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Install backend dependencies and run Checkstyle
        working-directory: ./backend
        run: mvn checkstyle:check

      - name: Run backend tests
        working-directory: ./backend
        run: mvn test

      - name: Build backend
        working-directory: ./backend
        run: mvn package -DskipTests

      # ---------- Frontend ----------
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.17.0"

      - name: Cache npm dependencies
        uses: actions/cache@v4
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Run frontend linter
        working-directory: ./frontend
        run: npm run lint

      - name: Run frontend tests (Jest)
        working-directory: ./frontend
        run: npm run test

      - name: Build frontend
        working-directory: ./frontend
        run: npm run build

      # Start backend in background
      - name: Start backend
        working-directory: ./backend
        run: ./mvnw spring-boot:run &

      # Start frontend in background
      - name: Start frontend
        working-directory: ./frontend
        run: npm start &

      # Wait for backend to be ready
      - name: Wait for backend to be ready
        run: |
          n=0
          until [ "$n" -ge 30 ]; do
            if curl -sSf http://localhost:8080/actuator/health > /dev/null; then
              echo "Backend is up!"
              break
            fi
            n=$((n+1))
            sleep 3
          done

      # Wait for frontend to be ready
      - name: Wait for frontend to be ready
        run: |
          n=0
          until [ "$n" -ge 30 ]; do
            if curl -sSf http://localhost:3000 > /dev/null; then
              echo "Frontend is up!"
              break
            fi
            n=$((n+1))
            sleep 3
          done

      - name: Install Playwright Browsers
        working-directory: ./frontend
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        working-directory: ./frontend
        run: npm run test:playwright
